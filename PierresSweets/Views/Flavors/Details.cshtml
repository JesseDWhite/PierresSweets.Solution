@{
  Layout = "_Layout";
}

@using PierresSweets.Models
@model PierresSweets.Models.Flavor

<h2>Flavor Details</h2>
<hr />
<div class="card" id="flavor-details-card">
  <h3>@Html.DisplayNameFor(model => model.FlavorName): @Html.DisplayFor(model => model.FlavorName)</h3>

  @if (@Model.FlavorTreatJoinEntities.Count == 0)
  {
    <p>@Html.DisplayFor(model => model.FlavorName) does not have any treats associated with it yet.</p>
  }
  else
  {
    <h4>Treats that have this flavor:</h4>
    <ul>
      @foreach (var join in Model.FlavorTreatJoinEntities)
      {
        <li>@Html.ActionLink($"{@join.Treat.TreatName}", "Details", "Treats", new {id = join.Treat.TreatId}) | @join.Treat.Description</li>
      }
    </ul>
  }
  <p>@Html.ActionLink("ðŸ‘ˆ Back to All Flavors", "Index", new { @class = "btn btn-dark"})</p>
</div>
<div class="details-button-block" align="center">
  <p>@Html.ActionLink("Edit Flavor", "Edit", new { id = Model.FlavorId }, new { @class = "btn btn-dark"})</p>
  <p>@Html.ActionLink("Delete Flavor", "Delete", new { id = Model.FlavorId }, new { @class = "btn btn-dark"})</p>
</div>